error[E0277]: the trait bound `ZeroMod8: TotalSizeIsNotMultipleOfEightBits` is not satisfied
 --> tests/filled-param/invalid-specified-as-unfilled.rs:5:1
  |
5 | pub struct UnfilledBitfield {
  | ^^^ the trait `TotalSizeIsNotMultipleOfEightBits` is not implemented for `ZeroMod8`, which is required by `<<UnfilledBitfield as CheckTotalSizeIsNotMultipleOf8>::Size as RenameSizeType>::CheckType: TotalSizeIsNotMultipleOfEightBits`
  |
  = help: the following other types implement trait `TotalSizeIsNotMultipleOfEightBits`:
            OneMod8
            TwoMod8
            ThreeMod8
            FourMod8
            FiveMod8
            SixMod8
            SevenMod8
note: required by a bound in `CheckTotalSizeIsNotMultipleOf8`
 --> src/private/checks.rs
  |
  | pub trait CheckTotalSizeIsNotMultipleOf8
  |           ------------------------------ required by a bound in this trait
  | where
  |     <Self::Size as RenameSizeType>::CheckType: TotalSizeIsNotMultipleOfEightBits,
  |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `CheckTotalSizeIsNotMultipleOf8`
  = note: `CheckTotalSizeIsNotMultipleOf8` is a "sealed trait", because to implement it you also need to implement `scryer_modular_bitfield::private::checks::TotalSizeIsNotMultipleOfEightBits`, which is not accessible; this is usually done to force you to use one of the provided types that already implement it
  = help: the following types implement the trait:
            scryer_modular_bitfield::private::checks::TwoMod8
            scryer_modular_bitfield::private::checks::FiveMod8
            scryer_modular_bitfield::private::checks::ThreeMod8
            scryer_modular_bitfield::private::checks::SevenMod8
            scryer_modular_bitfield::private::checks::SixMod8
            scryer_modular_bitfield::private::checks::FourMod8
            scryer_modular_bitfield::private::checks::OneMod8
